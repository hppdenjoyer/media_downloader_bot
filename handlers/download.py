from aiogram import types
from aiogram.types import FSInputFile
from utils.helpers import get_platform, is_valid_url
from utils.logger import logger
from services.youtube import YouTubeDownloader
from services.tiktok import TikTokDownloader
from services.pinterest import PinterestDownloader
import os

async def download_handler(message: types.Message):
    """Handle media download requests"""
    try:
        # Extract URL from message
        url = message.text
        if message.text.startswith('/download'):
            # Remove command from text
            url = message.text.replace('/download', '').strip()

        if not url:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /download <—Å—Å—ã–ª–∫–∞>")
            return

        if not is_valid_url(url):
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É")
            return

        # Send processing message
        processing_msg = await message.answer("‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...")
        logger.info(f"Processing download request for URL: {url}")

        # Determine platform and download
        platform = get_platform(url)
        logger.info(f"Detected platform: {platform}")
        file_path = None

        try:
            if platform == 'youtube':
                downloader = YouTubeDownloader()
                file_path = await downloader.download_video(url)
            elif platform == 'tiktok':
                downloader = TikTokDownloader()
                file_path = await downloader.download_video(url)
            elif platform == 'pinterest':
                downloader = PinterestDownloader()
                file_path = await downloader.download_pin(url)
            else:
                await message.answer("‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")
                return

            # Send the file
            if file_path and os.path.exists(file_path):
                try:
                    if file_path.endswith(('.mp4', '.mov')):
                        await message.answer_video(
                            FSInputFile(file_path),
                            caption="üé• –í–æ—Ç –≤–∞—à–µ –≤–∏–¥–µ–æ!"
                        )
                    elif file_path.endswith(('.mp3', '.m4a')):
                        await message.answer_audio(
                            FSInputFile(file_path),
                            caption="üéµ –í–æ—Ç –≤–∞—à–µ –∞—É–¥–∏–æ!"
                        )
                    else:
                        await message.answer_photo(
                            FSInputFile(file_path),
                            caption="üì∏ –í–æ—Ç –≤–∞—à–µ —Ñ–æ—Ç–æ!"
                        )
                    logger.info(f"Successfully sent file to user: {file_path}")
                except Exception as e:
                    logger.error(f"Error sending file to user: {str(e)}")
                    await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞. –í–æ–∑–º–æ–∂–Ω–æ, —Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π.")
                finally:
                    # Clean up
                    if os.path.exists(file_path):
                        os.remove(file_path)
                        logger.info(f"Cleaned up file: {file_path}")

            await processing_msg.delete()

        except ValueError as ve:
            error_message = str(ve)
            await message.answer(f"‚ö†Ô∏è {error_message}")
        except Exception as e:
            logger.error(f"Error downloading media: {str(e)}")
            await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    except Exception as e:
        logger.error(f"Error in download handler: {str(e)}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    finally:
        try:
            if 'processing_msg' in locals():
                await processing_msg.delete()
        except:
            pass